// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Senseix.Message.Parent {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Parent {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentSignOutRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentSignOutRequest, global::Senseix.Message.Parent.ParentSignOutRequest.Builder> internal__static_Senseix_Message_Parent_ParentSignOutRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentRegistrationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentRegistrationRequest, global::Senseix.Message.Parent.ParentRegistrationRequest.Builder> internal__static_Senseix_Message_Parent_ParentRegistrationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentRegistrationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentRegistrationResponse, global::Senseix.Message.Parent.ParentRegistrationResponse.Builder> internal__static_Senseix_Message_Parent_ParentRegistrationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_DeviceRegistrationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.DeviceRegistrationRequest, global::Senseix.Message.Parent.DeviceRegistrationRequest.Builder> internal__static_Senseix_Message_Parent_DeviceRegistrationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_DeviceRegistrationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.DeviceRegistrationResponse, global::Senseix.Message.Parent.DeviceRegistrationResponse.Builder> internal__static_Senseix_Message_Parent_DeviceRegistrationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentSignInRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentSignInRequest, global::Senseix.Message.Parent.ParentSignInRequest.Builder> internal__static_Senseix_Message_Parent_ParentSignInRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentSignInResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentSignInResponse, global::Senseix.Message.Parent.ParentSignInResponse.Builder> internal__static_Senseix_Message_Parent_ParentSignInResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentSignOutResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentSignOutResponse, global::Senseix.Message.Parent.ParentSignOutResponse.Builder> internal__static_Senseix_Message_Parent_ParentSignOutResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentEditRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentEditRequest, global::Senseix.Message.Parent.ParentEditRequest.Builder> internal__static_Senseix_Message_Parent_ParentEditRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentEditResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentEditResponse, global::Senseix.Message.Parent.ParentEditResponse.Builder> internal__static_Senseix_Message_Parent_ParentEditResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentMergeResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentMergeResponse, global::Senseix.Message.Parent.ParentMergeResponse.Builder> internal__static_Senseix_Message_Parent_ParentMergeResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_ParentMergeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentMergeRequest, global::Senseix.Message.Parent.ParentMergeRequest.Builder> internal__static_Senseix_Message_Parent_ParentMergeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_GameVerificationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.GameVerificationRequest, global::Senseix.Message.Parent.GameVerificationRequest.Builder> internal__static_Senseix_Message_Parent_GameVerificationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Parent_GameVerificationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.GameVerificationResponse, global::Senseix.Message.Parent.GameVerificationResponse.Builder> internal__static_Senseix_Message_Parent_GameVerificationResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Parent() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CgxQYXJlbnQucHJvdG8SFlNlbnNlaXguTWVzc2FnZS5QYXJlbnQaDkNvbnN0" + 
          "YW50LnByb3RvIikKFFBhcmVudFNpZ25PdXRSZXF1ZXN0EhEKCWRldmljZV9p" + 
          "ZBgCIAEoCSJ8ChlQYXJlbnRSZWdpc3RyYXRpb25SZXF1ZXN0EhEKCWRldmlj" + 
          "ZV9pZBgBIAIoCRINCgVlbWFpbBgCIAIoCRIQCghwYXNzd29yZBgDIAIoCRId" + 
          "ChVjb25maXJtYXRpb25fcGFzc3dvcmQYBCACKAkSDAoEbmFtZRgFIAEoCSIw" + 
          "ChpQYXJlbnRSZWdpc3RyYXRpb25SZXNwb25zZRISCgphdXRoX3Rva2VuGAEg" + 
          "ASgJIkMKGURldmljZVJlZ2lzdHJhdGlvblJlcXVlc3QSEQoJZGV2aWNlX2lk" + 
          "GAEgAigJEhMKC2luZm9ybWF0aW9uGAIgAigJImEKGkRldmljZVJlZ2lzdHJh" + 
          "dGlvblJlc3BvbnNlEhEKCXBsYXllcl9pZBgBIAIoCRIcChRpc190ZW1wb3Jh" + 
          "cnlfYWNjb3VudBgCIAIoCBISCgphdXRoX3Rva2VuGAMgASgJImgKE1BhcmVu" + 
          "dFNpZ25JblJlcXVlc3QSDQoFZW1haWwYASACKAkSEAoIcGFzc3dvcmQYAiAC" + 
          "KAkSHQoVY29uZmlybWF0aW9uX3Bhc3N3b3JkGAMgAigJEhEKCWRldmljZV9p" + 
          "ZBgEIAIoCSIqChRQYXJlbnRTaWduSW5SZXNwb25zZRISCgphdXRoX3Rva2Vu" + 
          "GAEgASgJIhcKFVBhcmVudFNpZ25PdXRSZXNwb25zZSKKAQoRUGFyZW50RWRp" + 
          "dFJlcXVlc3QSEAoIcGFzc3dvcmQYASACKAkSEQoJZGV2aWNlX2lkGAIgAigJ" + 
          "EhQKDG5ld19wYXNzd29yZBgDIAEoCRIdChVjb25maXJtYXRpb25fcGFzc3dv" + 
          "cmQYBCABKAkSDQoFZW1haWwYBSABKAkSDAoEbmFtZRgGIAEoCSIoChJQYXJl" + 
          "bnRFZGl0UmVzcG9uc2USEgoKYXV0aF90b2tlbhgBIAEoCSIpChNQYXJlbnRN" + 
          "ZXJnZVJlc3BvbnNlEhIKCmF1dGhfdG9rZW4YASACKAki8gEKElBhcmVudE1l" + 
          "cmdlUmVxdWVzdBIQCghwYXNzd29yZBgBIAIoCRINCgVlbWFpbBgCIAIoCRIR" + 
          "CglkZXZpY2VfaWQYAyACKAkSTQoIZGVjaXNpb24YBCACKA4yMy5TZW5zZWl4" + 
          "Lk1lc3NhZ2UuUGFyZW50LlBhcmVudE1lcmdlUmVxdWVzdC5EZWNpc2lvbjoG" + 
          "REVMRVRFEhEKCXBsYXllcl9pZBgFIAEoCRIXCg9uZXdfcGxheWVyX25hbWUY" + 
          "BiABKAkiLQoIRGVjaXNpb24SCQoFTUVSR0UQABIKCgZDUkVBVEUQARIKCgZE" + 
          "RUxFVEUQAiJDChdHYW1lVmVyaWZpY2F0aW9uUmVxdWVzdBIMCgR1ZGlkGAEg" + 
          "AigJEhoKEnZlcmlmaWNhdGlvbl90b2tlbhgCIAIoCSIaChhHYW1lVmVyaWZp" + 
          "Y2F0aW9uUmVzcG9uc2U=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Senseix_Message_Parent_ParentSignOutRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Senseix_Message_Parent_ParentSignOutRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentSignOutRequest, global::Senseix.Message.Parent.ParentSignOutRequest.Builder>(internal__static_Senseix_Message_Parent_ParentSignOutRequest__Descriptor,
                new string[] { "DeviceId", });
        internal__static_Senseix_Message_Parent_ParentRegistrationRequest__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Senseix_Message_Parent_ParentRegistrationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentRegistrationRequest, global::Senseix.Message.Parent.ParentRegistrationRequest.Builder>(internal__static_Senseix_Message_Parent_ParentRegistrationRequest__Descriptor,
                new string[] { "DeviceId", "Email", "Password", "ConfirmationPassword", "Name", });
        internal__static_Senseix_Message_Parent_ParentRegistrationResponse__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Senseix_Message_Parent_ParentRegistrationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentRegistrationResponse, global::Senseix.Message.Parent.ParentRegistrationResponse.Builder>(internal__static_Senseix_Message_Parent_ParentRegistrationResponse__Descriptor,
                new string[] { "AuthToken", });
        internal__static_Senseix_Message_Parent_DeviceRegistrationRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Senseix_Message_Parent_DeviceRegistrationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.DeviceRegistrationRequest, global::Senseix.Message.Parent.DeviceRegistrationRequest.Builder>(internal__static_Senseix_Message_Parent_DeviceRegistrationRequest__Descriptor,
                new string[] { "DeviceId", "Information", });
        internal__static_Senseix_Message_Parent_DeviceRegistrationResponse__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Senseix_Message_Parent_DeviceRegistrationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.DeviceRegistrationResponse, global::Senseix.Message.Parent.DeviceRegistrationResponse.Builder>(internal__static_Senseix_Message_Parent_DeviceRegistrationResponse__Descriptor,
                new string[] { "PlayerId", "IsTemporaryAccount", "AuthToken", });
        internal__static_Senseix_Message_Parent_ParentSignInRequest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Senseix_Message_Parent_ParentSignInRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentSignInRequest, global::Senseix.Message.Parent.ParentSignInRequest.Builder>(internal__static_Senseix_Message_Parent_ParentSignInRequest__Descriptor,
                new string[] { "Email", "Password", "ConfirmationPassword", "DeviceId", });
        internal__static_Senseix_Message_Parent_ParentSignInResponse__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Senseix_Message_Parent_ParentSignInResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentSignInResponse, global::Senseix.Message.Parent.ParentSignInResponse.Builder>(internal__static_Senseix_Message_Parent_ParentSignInResponse__Descriptor,
                new string[] { "AuthToken", });
        internal__static_Senseix_Message_Parent_ParentSignOutResponse__Descriptor = Descriptor.MessageTypes[7];
        internal__static_Senseix_Message_Parent_ParentSignOutResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentSignOutResponse, global::Senseix.Message.Parent.ParentSignOutResponse.Builder>(internal__static_Senseix_Message_Parent_ParentSignOutResponse__Descriptor,
                new string[] { });
        internal__static_Senseix_Message_Parent_ParentEditRequest__Descriptor = Descriptor.MessageTypes[8];
        internal__static_Senseix_Message_Parent_ParentEditRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentEditRequest, global::Senseix.Message.Parent.ParentEditRequest.Builder>(internal__static_Senseix_Message_Parent_ParentEditRequest__Descriptor,
                new string[] { "Password", "DeviceId", "NewPassword", "ConfirmationPassword", "Email", "Name", });
        internal__static_Senseix_Message_Parent_ParentEditResponse__Descriptor = Descriptor.MessageTypes[9];
        internal__static_Senseix_Message_Parent_ParentEditResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentEditResponse, global::Senseix.Message.Parent.ParentEditResponse.Builder>(internal__static_Senseix_Message_Parent_ParentEditResponse__Descriptor,
                new string[] { "AuthToken", });
        internal__static_Senseix_Message_Parent_ParentMergeResponse__Descriptor = Descriptor.MessageTypes[10];
        internal__static_Senseix_Message_Parent_ParentMergeResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentMergeResponse, global::Senseix.Message.Parent.ParentMergeResponse.Builder>(internal__static_Senseix_Message_Parent_ParentMergeResponse__Descriptor,
                new string[] { "AuthToken", });
        internal__static_Senseix_Message_Parent_ParentMergeRequest__Descriptor = Descriptor.MessageTypes[11];
        internal__static_Senseix_Message_Parent_ParentMergeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.ParentMergeRequest, global::Senseix.Message.Parent.ParentMergeRequest.Builder>(internal__static_Senseix_Message_Parent_ParentMergeRequest__Descriptor,
                new string[] { "Password", "Email", "DeviceId", "Decision", "PlayerId", "NewPlayerName", });
        internal__static_Senseix_Message_Parent_GameVerificationRequest__Descriptor = Descriptor.MessageTypes[12];
        internal__static_Senseix_Message_Parent_GameVerificationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.GameVerificationRequest, global::Senseix.Message.Parent.GameVerificationRequest.Builder>(internal__static_Senseix_Message_Parent_GameVerificationRequest__Descriptor,
                new string[] { "Udid", "VerificationToken", });
        internal__static_Senseix_Message_Parent_GameVerificationResponse__Descriptor = Descriptor.MessageTypes[13];
        internal__static_Senseix_Message_Parent_GameVerificationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Parent.GameVerificationResponse, global::Senseix.Message.Parent.GameVerificationResponse.Builder>(internal__static_Senseix_Message_Parent_GameVerificationResponse__Descriptor,
                new string[] { });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Senseix.Message.Constant.Constant.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentSignOutRequest : pb::GeneratedMessage<ParentSignOutRequest, ParentSignOutRequest.Builder> {
    private ParentSignOutRequest() { }
    private static readonly ParentSignOutRequest defaultInstance = new ParentSignOutRequest().MakeReadOnly();
    private static readonly string[] _ParentSignOutRequestFieldNames = new string[] { "device_id" };
    private static readonly uint[] _ParentSignOutRequestFieldTags = new uint[] { 18 };
    public static ParentSignOutRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentSignOutRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentSignOutRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentSignOutRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentSignOutRequest, ParentSignOutRequest.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentSignOutRequest__FieldAccessorTable; }
    }
    
    public const int DeviceIdFieldNumber = 2;
    private bool hasDeviceId;
    private string deviceId_ = "";
    public bool HasDeviceId {
      get { return hasDeviceId; }
    }
    public string DeviceId {
      get { return deviceId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentSignOutRequestFieldNames;
      if (hasDeviceId) {
        output.WriteString(2, field_names[0], DeviceId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDeviceId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, DeviceId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentSignOutRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentSignOutRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentSignOutRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentSignOutRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentSignOutRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentSignOutRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentSignOutRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentSignOutRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentSignOutRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentSignOutRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentSignOutRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentSignOutRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentSignOutRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentSignOutRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentSignOutRequest result;
      
      private ParentSignOutRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentSignOutRequest original = result;
          result = new ParentSignOutRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentSignOutRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentSignOutRequest.Descriptor; }
      }
      
      public override ParentSignOutRequest DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentSignOutRequest.DefaultInstance; }
      }
      
      public override ParentSignOutRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentSignOutRequest) {
          return MergeFrom((ParentSignOutRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentSignOutRequest other) {
        if (other == global::Senseix.Message.Parent.ParentSignOutRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDeviceId) {
          DeviceId = other.DeviceId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentSignOutRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentSignOutRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              result.hasDeviceId = input.ReadString(ref result.deviceId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDeviceId {
        get { return result.hasDeviceId; }
      }
      public string DeviceId {
        get { return result.DeviceId; }
        set { SetDeviceId(value); }
      }
      public Builder SetDeviceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder ClearDeviceId() {
        PrepareBuilder();
        result.hasDeviceId = false;
        result.deviceId_ = "";
        return this;
      }
    }
    static ParentSignOutRequest() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentRegistrationRequest : pb::GeneratedMessage<ParentRegistrationRequest, ParentRegistrationRequest.Builder> {
    private ParentRegistrationRequest() { }
    private static readonly ParentRegistrationRequest defaultInstance = new ParentRegistrationRequest().MakeReadOnly();
    private static readonly string[] _ParentRegistrationRequestFieldNames = new string[] { "confirmation_password", "device_id", "email", "name", "password" };
    private static readonly uint[] _ParentRegistrationRequestFieldTags = new uint[] { 34, 10, 18, 42, 26 };
    public static ParentRegistrationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentRegistrationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentRegistrationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentRegistrationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentRegistrationRequest, ParentRegistrationRequest.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentRegistrationRequest__FieldAccessorTable; }
    }
    
    public const int DeviceIdFieldNumber = 1;
    private bool hasDeviceId;
    private string deviceId_ = "";
    public bool HasDeviceId {
      get { return hasDeviceId; }
    }
    public string DeviceId {
      get { return deviceId_; }
    }
    
    public const int EmailFieldNumber = 2;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int PasswordFieldNumber = 3;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int ConfirmationPasswordFieldNumber = 4;
    private bool hasConfirmationPassword;
    private string confirmationPassword_ = "";
    public bool HasConfirmationPassword {
      get { return hasConfirmationPassword; }
    }
    public string ConfirmationPassword {
      get { return confirmationPassword_; }
    }
    
    public const int NameFieldNumber = 5;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDeviceId) return false;
        if (!hasEmail) return false;
        if (!hasPassword) return false;
        if (!hasConfirmationPassword) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentRegistrationRequestFieldNames;
      if (hasDeviceId) {
        output.WriteString(1, field_names[1], DeviceId);
      }
      if (hasEmail) {
        output.WriteString(2, field_names[2], Email);
      }
      if (hasPassword) {
        output.WriteString(3, field_names[4], Password);
      }
      if (hasConfirmationPassword) {
        output.WriteString(4, field_names[0], ConfirmationPassword);
      }
      if (hasName) {
        output.WriteString(5, field_names[3], Name);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDeviceId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, DeviceId);
        }
        if (hasEmail) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Email);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Password);
        }
        if (hasConfirmationPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(4, ConfirmationPassword);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Name);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentRegistrationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentRegistrationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentRegistrationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentRegistrationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentRegistrationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentRegistrationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentRegistrationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentRegistrationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentRegistrationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentRegistrationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentRegistrationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentRegistrationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentRegistrationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentRegistrationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentRegistrationRequest result;
      
      private ParentRegistrationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentRegistrationRequest original = result;
          result = new ParentRegistrationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentRegistrationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentRegistrationRequest.Descriptor; }
      }
      
      public override ParentRegistrationRequest DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentRegistrationRequest.DefaultInstance; }
      }
      
      public override ParentRegistrationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentRegistrationRequest) {
          return MergeFrom((ParentRegistrationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentRegistrationRequest other) {
        if (other == global::Senseix.Message.Parent.ParentRegistrationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDeviceId) {
          DeviceId = other.DeviceId;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasConfirmationPassword) {
          ConfirmationPassword = other.ConfirmationPassword;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentRegistrationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentRegistrationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDeviceId = input.ReadString(ref result.deviceId_);
              break;
            }
            case 18: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
            case 26: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 34: {
              result.hasConfirmationPassword = input.ReadString(ref result.confirmationPassword_);
              break;
            }
            case 42: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDeviceId {
        get { return result.hasDeviceId; }
      }
      public string DeviceId {
        get { return result.DeviceId; }
        set { SetDeviceId(value); }
      }
      public Builder SetDeviceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder ClearDeviceId() {
        PrepareBuilder();
        result.hasDeviceId = false;
        result.deviceId_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasConfirmationPassword {
        get { return result.hasConfirmationPassword; }
      }
      public string ConfirmationPassword {
        get { return result.ConfirmationPassword; }
        set { SetConfirmationPassword(value); }
      }
      public Builder SetConfirmationPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConfirmationPassword = true;
        result.confirmationPassword_ = value;
        return this;
      }
      public Builder ClearConfirmationPassword() {
        PrepareBuilder();
        result.hasConfirmationPassword = false;
        result.confirmationPassword_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
    }
    static ParentRegistrationRequest() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentRegistrationResponse : pb::GeneratedMessage<ParentRegistrationResponse, ParentRegistrationResponse.Builder> {
    private ParentRegistrationResponse() { }
    private static readonly ParentRegistrationResponse defaultInstance = new ParentRegistrationResponse().MakeReadOnly();
    private static readonly string[] _ParentRegistrationResponseFieldNames = new string[] { "auth_token" };
    private static readonly uint[] _ParentRegistrationResponseFieldTags = new uint[] { 10 };
    public static ParentRegistrationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentRegistrationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentRegistrationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentRegistrationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentRegistrationResponse, ParentRegistrationResponse.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentRegistrationResponse__FieldAccessorTable; }
    }
    
    public const int AuthTokenFieldNumber = 1;
    private bool hasAuthToken;
    private string authToken_ = "";
    public bool HasAuthToken {
      get { return hasAuthToken; }
    }
    public string AuthToken {
      get { return authToken_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentRegistrationResponseFieldNames;
      if (hasAuthToken) {
        output.WriteString(1, field_names[0], AuthToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthToken) {
          size += pb::CodedOutputStream.ComputeStringSize(1, AuthToken);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentRegistrationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentRegistrationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentRegistrationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentRegistrationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentRegistrationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentRegistrationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentRegistrationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentRegistrationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentRegistrationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentRegistrationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentRegistrationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentRegistrationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentRegistrationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentRegistrationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentRegistrationResponse result;
      
      private ParentRegistrationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentRegistrationResponse original = result;
          result = new ParentRegistrationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentRegistrationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentRegistrationResponse.Descriptor; }
      }
      
      public override ParentRegistrationResponse DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentRegistrationResponse.DefaultInstance; }
      }
      
      public override ParentRegistrationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentRegistrationResponse) {
          return MergeFrom((ParentRegistrationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentRegistrationResponse other) {
        if (other == global::Senseix.Message.Parent.ParentRegistrationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthToken) {
          AuthToken = other.AuthToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentRegistrationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentRegistrationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAuthToken = input.ReadString(ref result.authToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthToken {
        get { return result.hasAuthToken; }
      }
      public string AuthToken {
        get { return result.AuthToken; }
        set { SetAuthToken(value); }
      }
      public Builder SetAuthToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthToken = true;
        result.authToken_ = value;
        return this;
      }
      public Builder ClearAuthToken() {
        PrepareBuilder();
        result.hasAuthToken = false;
        result.authToken_ = "";
        return this;
      }
    }
    static ParentRegistrationResponse() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeviceRegistrationRequest : pb::GeneratedMessage<DeviceRegistrationRequest, DeviceRegistrationRequest.Builder> {
    private DeviceRegistrationRequest() { }
    private static readonly DeviceRegistrationRequest defaultInstance = new DeviceRegistrationRequest().MakeReadOnly();
    private static readonly string[] _deviceRegistrationRequestFieldNames = new string[] { "device_id", "information" };
    private static readonly uint[] _deviceRegistrationRequestFieldTags = new uint[] { 10, 18 };
    public static DeviceRegistrationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeviceRegistrationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeviceRegistrationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_DeviceRegistrationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeviceRegistrationRequest, DeviceRegistrationRequest.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_DeviceRegistrationRequest__FieldAccessorTable; }
    }
    
    public const int DeviceIdFieldNumber = 1;
    private bool hasDeviceId;
    private string deviceId_ = "";
    public bool HasDeviceId {
      get { return hasDeviceId; }
    }
    public string DeviceId {
      get { return deviceId_; }
    }
    
    public const int InformationFieldNumber = 2;
    private bool hasInformation;
    private string information_ = "";
    public bool HasInformation {
      get { return hasInformation; }
    }
    public string Information {
      get { return information_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDeviceId) return false;
        if (!hasInformation) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _deviceRegistrationRequestFieldNames;
      if (hasDeviceId) {
        output.WriteString(1, field_names[0], DeviceId);
      }
      if (hasInformation) {
        output.WriteString(2, field_names[1], Information);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDeviceId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, DeviceId);
        }
        if (hasInformation) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Information);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeviceRegistrationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeviceRegistrationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeviceRegistrationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeviceRegistrationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeviceRegistrationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeviceRegistrationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeviceRegistrationRequest result;
      
      private DeviceRegistrationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeviceRegistrationRequest original = result;
          result = new DeviceRegistrationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeviceRegistrationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.DeviceRegistrationRequest.Descriptor; }
      }
      
      public override DeviceRegistrationRequest DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.DeviceRegistrationRequest.DefaultInstance; }
      }
      
      public override DeviceRegistrationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeviceRegistrationRequest) {
          return MergeFrom((DeviceRegistrationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeviceRegistrationRequest other) {
        if (other == global::Senseix.Message.Parent.DeviceRegistrationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDeviceId) {
          DeviceId = other.DeviceId;
        }
        if (other.HasInformation) {
          Information = other.Information;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deviceRegistrationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deviceRegistrationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDeviceId = input.ReadString(ref result.deviceId_);
              break;
            }
            case 18: {
              result.hasInformation = input.ReadString(ref result.information_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDeviceId {
        get { return result.hasDeviceId; }
      }
      public string DeviceId {
        get { return result.DeviceId; }
        set { SetDeviceId(value); }
      }
      public Builder SetDeviceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder ClearDeviceId() {
        PrepareBuilder();
        result.hasDeviceId = false;
        result.deviceId_ = "";
        return this;
      }
      
      public bool HasInformation {
        get { return result.hasInformation; }
      }
      public string Information {
        get { return result.Information; }
        set { SetInformation(value); }
      }
      public Builder SetInformation(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInformation = true;
        result.information_ = value;
        return this;
      }
      public Builder ClearInformation() {
        PrepareBuilder();
        result.hasInformation = false;
        result.information_ = "";
        return this;
      }
    }
    static DeviceRegistrationRequest() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeviceRegistrationResponse : pb::GeneratedMessage<DeviceRegistrationResponse, DeviceRegistrationResponse.Builder> {
    private DeviceRegistrationResponse() { }
    private static readonly DeviceRegistrationResponse defaultInstance = new DeviceRegistrationResponse().MakeReadOnly();
    private static readonly string[] _deviceRegistrationResponseFieldNames = new string[] { "auth_token", "is_temporary_account", "Player_id" };
    private static readonly uint[] _deviceRegistrationResponseFieldTags = new uint[] { 26, 16, 10 };
    public static DeviceRegistrationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeviceRegistrationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeviceRegistrationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_DeviceRegistrationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeviceRegistrationResponse, DeviceRegistrationResponse.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_DeviceRegistrationResponse__FieldAccessorTable; }
    }
    
    public const int PlayerIdFieldNumber = 1;
    private bool hasPlayerId;
    private string PlayerId_ = "";
    public bool HasPlayerId {
      get { return hasPlayerId; }
    }
    public string PlayerId {
      get { return PlayerId_; }
    }
    
    public const int IsTemporaryAccountFieldNumber = 2;
    private bool hasIsTemporaryAccount;
    private bool isTemporaryAccount_;
    public bool HasIsTemporaryAccount {
      get { return hasIsTemporaryAccount; }
    }
    public bool IsTemporaryAccount {
      get { return isTemporaryAccount_; }
    }
    
    public const int AuthTokenFieldNumber = 3;
    private bool hasAuthToken;
    private string authToken_ = "";
    public bool HasAuthToken {
      get { return hasAuthToken; }
    }
    public string AuthToken {
      get { return authToken_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPlayerId) return false;
        if (!hasIsTemporaryAccount) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _deviceRegistrationResponseFieldNames;
      if (hasPlayerId) {
        output.WriteString(1, field_names[2], PlayerId);
      }
      if (hasIsTemporaryAccount) {
        output.WriteBool(2, field_names[1], IsTemporaryAccount);
      }
      if (hasAuthToken) {
        output.WriteString(3, field_names[0], AuthToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPlayerId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, PlayerId);
        }
        if (hasIsTemporaryAccount) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsTemporaryAccount);
        }
        if (hasAuthToken) {
          size += pb::CodedOutputStream.ComputeStringSize(3, AuthToken);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeviceRegistrationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeviceRegistrationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeviceRegistrationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeviceRegistrationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeviceRegistrationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeviceRegistrationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeviceRegistrationResponse result;
      
      private DeviceRegistrationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DeviceRegistrationResponse original = result;
          result = new DeviceRegistrationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeviceRegistrationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.DeviceRegistrationResponse.Descriptor; }
      }
      
      public override DeviceRegistrationResponse DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.DeviceRegistrationResponse.DefaultInstance; }
      }
      
      public override DeviceRegistrationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeviceRegistrationResponse) {
          return MergeFrom((DeviceRegistrationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeviceRegistrationResponse other) {
        if (other == global::Senseix.Message.Parent.DeviceRegistrationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPlayerId) {
          PlayerId = other.PlayerId;
        }
        if (other.HasIsTemporaryAccount) {
          IsTemporaryAccount = other.IsTemporaryAccount;
        }
        if (other.HasAuthToken) {
          AuthToken = other.AuthToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deviceRegistrationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deviceRegistrationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPlayerId = input.ReadString(ref result.PlayerId_);
              break;
            }
            case 16: {
              result.hasIsTemporaryAccount = input.ReadBool(ref result.isTemporaryAccount_);
              break;
            }
            case 26: {
              result.hasAuthToken = input.ReadString(ref result.authToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPlayerId {
        get { return result.hasPlayerId; }
      }
      public string PlayerId {
        get { return result.PlayerId; }
        set { SetPlayerId(value); }
      }
      public Builder SetPlayerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlayerId = true;
        result.PlayerId_ = value;
        return this;
      }
      public Builder ClearPlayerId() {
        PrepareBuilder();
        result.hasPlayerId = false;
        result.PlayerId_ = "";
        return this;
      }
      
      public bool HasIsTemporaryAccount {
        get { return result.hasIsTemporaryAccount; }
      }
      public bool IsTemporaryAccount {
        get { return result.IsTemporaryAccount; }
        set { SetIsTemporaryAccount(value); }
      }
      public Builder SetIsTemporaryAccount(bool value) {
        PrepareBuilder();
        result.hasIsTemporaryAccount = true;
        result.isTemporaryAccount_ = value;
        return this;
      }
      public Builder ClearIsTemporaryAccount() {
        PrepareBuilder();
        result.hasIsTemporaryAccount = false;
        result.isTemporaryAccount_ = false;
        return this;
      }
      
      public bool HasAuthToken {
        get { return result.hasAuthToken; }
      }
      public string AuthToken {
        get { return result.AuthToken; }
        set { SetAuthToken(value); }
      }
      public Builder SetAuthToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthToken = true;
        result.authToken_ = value;
        return this;
      }
      public Builder ClearAuthToken() {
        PrepareBuilder();
        result.hasAuthToken = false;
        result.authToken_ = "";
        return this;
      }
    }
    static DeviceRegistrationResponse() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentSignInRequest : pb::GeneratedMessage<ParentSignInRequest, ParentSignInRequest.Builder> {
    private ParentSignInRequest() { }
    private static readonly ParentSignInRequest defaultInstance = new ParentSignInRequest().MakeReadOnly();
    private static readonly string[] _ParentSignInRequestFieldNames = new string[] { "confirmation_password", "device_id", "email", "password" };
    private static readonly uint[] _ParentSignInRequestFieldTags = new uint[] { 26, 34, 10, 18 };
    public static ParentSignInRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentSignInRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentSignInRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentSignInRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentSignInRequest, ParentSignInRequest.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentSignInRequest__FieldAccessorTable; }
    }
    
    public const int EmailFieldNumber = 1;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int ConfirmationPasswordFieldNumber = 3;
    private bool hasConfirmationPassword;
    private string confirmationPassword_ = "";
    public bool HasConfirmationPassword {
      get { return hasConfirmationPassword; }
    }
    public string ConfirmationPassword {
      get { return confirmationPassword_; }
    }
    
    public const int DeviceIdFieldNumber = 4;
    private bool hasDeviceId;
    private string deviceId_ = "";
    public bool HasDeviceId {
      get { return hasDeviceId; }
    }
    public string DeviceId {
      get { return deviceId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEmail) return false;
        if (!hasPassword) return false;
        if (!hasConfirmationPassword) return false;
        if (!hasDeviceId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentSignInRequestFieldNames;
      if (hasEmail) {
        output.WriteString(1, field_names[2], Email);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[3], Password);
      }
      if (hasConfirmationPassword) {
        output.WriteString(3, field_names[0], ConfirmationPassword);
      }
      if (hasDeviceId) {
        output.WriteString(4, field_names[1], DeviceId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEmail) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Email);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password);
        }
        if (hasConfirmationPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ConfirmationPassword);
        }
        if (hasDeviceId) {
          size += pb::CodedOutputStream.ComputeStringSize(4, DeviceId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentSignInRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentSignInRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentSignInRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentSignInRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentSignInRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentSignInRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentSignInRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentSignInRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentSignInRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentSignInRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentSignInRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentSignInRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentSignInRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentSignInRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentSignInRequest result;
      
      private ParentSignInRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentSignInRequest original = result;
          result = new ParentSignInRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentSignInRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentSignInRequest.Descriptor; }
      }
      
      public override ParentSignInRequest DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentSignInRequest.DefaultInstance; }
      }
      
      public override ParentSignInRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentSignInRequest) {
          return MergeFrom((ParentSignInRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentSignInRequest other) {
        if (other == global::Senseix.Message.Parent.ParentSignInRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasConfirmationPassword) {
          ConfirmationPassword = other.ConfirmationPassword;
        }
        if (other.HasDeviceId) {
          DeviceId = other.DeviceId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentSignInRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentSignInRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 26: {
              result.hasConfirmationPassword = input.ReadString(ref result.confirmationPassword_);
              break;
            }
            case 34: {
              result.hasDeviceId = input.ReadString(ref result.deviceId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasConfirmationPassword {
        get { return result.hasConfirmationPassword; }
      }
      public string ConfirmationPassword {
        get { return result.ConfirmationPassword; }
        set { SetConfirmationPassword(value); }
      }
      public Builder SetConfirmationPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConfirmationPassword = true;
        result.confirmationPassword_ = value;
        return this;
      }
      public Builder ClearConfirmationPassword() {
        PrepareBuilder();
        result.hasConfirmationPassword = false;
        result.confirmationPassword_ = "";
        return this;
      }
      
      public bool HasDeviceId {
        get { return result.hasDeviceId; }
      }
      public string DeviceId {
        get { return result.DeviceId; }
        set { SetDeviceId(value); }
      }
      public Builder SetDeviceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder ClearDeviceId() {
        PrepareBuilder();
        result.hasDeviceId = false;
        result.deviceId_ = "";
        return this;
      }
    }
    static ParentSignInRequest() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentSignInResponse : pb::GeneratedMessage<ParentSignInResponse, ParentSignInResponse.Builder> {
    private ParentSignInResponse() { }
    private static readonly ParentSignInResponse defaultInstance = new ParentSignInResponse().MakeReadOnly();
    private static readonly string[] _ParentSignInResponseFieldNames = new string[] { "auth_token" };
    private static readonly uint[] _ParentSignInResponseFieldTags = new uint[] { 10 };
    public static ParentSignInResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentSignInResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentSignInResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentSignInResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentSignInResponse, ParentSignInResponse.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentSignInResponse__FieldAccessorTable; }
    }
    
    public const int AuthTokenFieldNumber = 1;
    private bool hasAuthToken;
    private string authToken_ = "";
    public bool HasAuthToken {
      get { return hasAuthToken; }
    }
    public string AuthToken {
      get { return authToken_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentSignInResponseFieldNames;
      if (hasAuthToken) {
        output.WriteString(1, field_names[0], AuthToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthToken) {
          size += pb::CodedOutputStream.ComputeStringSize(1, AuthToken);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentSignInResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentSignInResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentSignInResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentSignInResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentSignInResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentSignInResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentSignInResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentSignInResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentSignInResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentSignInResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentSignInResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentSignInResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentSignInResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentSignInResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentSignInResponse result;
      
      private ParentSignInResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentSignInResponse original = result;
          result = new ParentSignInResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentSignInResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentSignInResponse.Descriptor; }
      }
      
      public override ParentSignInResponse DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentSignInResponse.DefaultInstance; }
      }
      
      public override ParentSignInResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentSignInResponse) {
          return MergeFrom((ParentSignInResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentSignInResponse other) {
        if (other == global::Senseix.Message.Parent.ParentSignInResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthToken) {
          AuthToken = other.AuthToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentSignInResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentSignInResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAuthToken = input.ReadString(ref result.authToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthToken {
        get { return result.hasAuthToken; }
      }
      public string AuthToken {
        get { return result.AuthToken; }
        set { SetAuthToken(value); }
      }
      public Builder SetAuthToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthToken = true;
        result.authToken_ = value;
        return this;
      }
      public Builder ClearAuthToken() {
        PrepareBuilder();
        result.hasAuthToken = false;
        result.authToken_ = "";
        return this;
      }
    }
    static ParentSignInResponse() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentSignOutResponse : pb::GeneratedMessage<ParentSignOutResponse, ParentSignOutResponse.Builder> {
    private ParentSignOutResponse() { }
    private static readonly ParentSignOutResponse defaultInstance = new ParentSignOutResponse().MakeReadOnly();
    private static readonly string[] _ParentSignOutResponseFieldNames = new string[] {  };
    private static readonly uint[] _ParentSignOutResponseFieldTags = new uint[] {  };
    public static ParentSignOutResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentSignOutResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentSignOutResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentSignOutResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentSignOutResponse, ParentSignOutResponse.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentSignOutResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentSignOutResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentSignOutResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentSignOutResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentSignOutResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentSignOutResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentSignOutResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentSignOutResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentSignOutResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentSignOutResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentSignOutResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentSignOutResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentSignOutResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentSignOutResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentSignOutResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentSignOutResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentSignOutResponse result;
      
      private ParentSignOutResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentSignOutResponse original = result;
          result = new ParentSignOutResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentSignOutResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentSignOutResponse.Descriptor; }
      }
      
      public override ParentSignOutResponse DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentSignOutResponse.DefaultInstance; }
      }
      
      public override ParentSignOutResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentSignOutResponse) {
          return MergeFrom((ParentSignOutResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentSignOutResponse other) {
        if (other == global::Senseix.Message.Parent.ParentSignOutResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentSignOutResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentSignOutResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ParentSignOutResponse() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentEditRequest : pb::GeneratedMessage<ParentEditRequest, ParentEditRequest.Builder> {
    private ParentEditRequest() { }
    private static readonly ParentEditRequest defaultInstance = new ParentEditRequest().MakeReadOnly();
    private static readonly string[] _ParentEditRequestFieldNames = new string[] { "confirmation_password", "device_id", "email", "name", "new_password", "password" };
    private static readonly uint[] _ParentEditRequestFieldTags = new uint[] { 34, 18, 42, 50, 26, 10 };
    public static ParentEditRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentEditRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentEditRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentEditRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentEditRequest, ParentEditRequest.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentEditRequest__FieldAccessorTable; }
    }
    
    public const int PasswordFieldNumber = 1;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int DeviceIdFieldNumber = 2;
    private bool hasDeviceId;
    private string deviceId_ = "";
    public bool HasDeviceId {
      get { return hasDeviceId; }
    }
    public string DeviceId {
      get { return deviceId_; }
    }
    
    public const int NewPasswordFieldNumber = 3;
    private bool hasNewPassword;
    private string newPassword_ = "";
    public bool HasNewPassword {
      get { return hasNewPassword; }
    }
    public string NewPassword {
      get { return newPassword_; }
    }
    
    public const int ConfirmationPasswordFieldNumber = 4;
    private bool hasConfirmationPassword;
    private string confirmationPassword_ = "";
    public bool HasConfirmationPassword {
      get { return hasConfirmationPassword; }
    }
    public string ConfirmationPassword {
      get { return confirmationPassword_; }
    }
    
    public const int EmailFieldNumber = 5;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int NameFieldNumber = 6;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPassword) return false;
        if (!hasDeviceId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentEditRequestFieldNames;
      if (hasPassword) {
        output.WriteString(1, field_names[5], Password);
      }
      if (hasDeviceId) {
        output.WriteString(2, field_names[1], DeviceId);
      }
      if (hasNewPassword) {
        output.WriteString(3, field_names[4], NewPassword);
      }
      if (hasConfirmationPassword) {
        output.WriteString(4, field_names[0], ConfirmationPassword);
      }
      if (hasEmail) {
        output.WriteString(5, field_names[2], Email);
      }
      if (hasName) {
        output.WriteString(6, field_names[3], Name);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Password);
        }
        if (hasDeviceId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, DeviceId);
        }
        if (hasNewPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(3, NewPassword);
        }
        if (hasConfirmationPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(4, ConfirmationPassword);
        }
        if (hasEmail) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Email);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Name);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentEditRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentEditRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentEditRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentEditRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentEditRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentEditRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentEditRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentEditRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentEditRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentEditRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentEditRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentEditRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentEditRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentEditRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentEditRequest result;
      
      private ParentEditRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentEditRequest original = result;
          result = new ParentEditRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentEditRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentEditRequest.Descriptor; }
      }
      
      public override ParentEditRequest DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentEditRequest.DefaultInstance; }
      }
      
      public override ParentEditRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentEditRequest) {
          return MergeFrom((ParentEditRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentEditRequest other) {
        if (other == global::Senseix.Message.Parent.ParentEditRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasDeviceId) {
          DeviceId = other.DeviceId;
        }
        if (other.HasNewPassword) {
          NewPassword = other.NewPassword;
        }
        if (other.HasConfirmationPassword) {
          ConfirmationPassword = other.ConfirmationPassword;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentEditRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentEditRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 18: {
              result.hasDeviceId = input.ReadString(ref result.deviceId_);
              break;
            }
            case 26: {
              result.hasNewPassword = input.ReadString(ref result.newPassword_);
              break;
            }
            case 34: {
              result.hasConfirmationPassword = input.ReadString(ref result.confirmationPassword_);
              break;
            }
            case 42: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
            case 50: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasDeviceId {
        get { return result.hasDeviceId; }
      }
      public string DeviceId {
        get { return result.DeviceId; }
        set { SetDeviceId(value); }
      }
      public Builder SetDeviceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder ClearDeviceId() {
        PrepareBuilder();
        result.hasDeviceId = false;
        result.deviceId_ = "";
        return this;
      }
      
      public bool HasNewPassword {
        get { return result.hasNewPassword; }
      }
      public string NewPassword {
        get { return result.NewPassword; }
        set { SetNewPassword(value); }
      }
      public Builder SetNewPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewPassword = true;
        result.newPassword_ = value;
        return this;
      }
      public Builder ClearNewPassword() {
        PrepareBuilder();
        result.hasNewPassword = false;
        result.newPassword_ = "";
        return this;
      }
      
      public bool HasConfirmationPassword {
        get { return result.hasConfirmationPassword; }
      }
      public string ConfirmationPassword {
        get { return result.ConfirmationPassword; }
        set { SetConfirmationPassword(value); }
      }
      public Builder SetConfirmationPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConfirmationPassword = true;
        result.confirmationPassword_ = value;
        return this;
      }
      public Builder ClearConfirmationPassword() {
        PrepareBuilder();
        result.hasConfirmationPassword = false;
        result.confirmationPassword_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
    }
    static ParentEditRequest() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentEditResponse : pb::GeneratedMessage<ParentEditResponse, ParentEditResponse.Builder> {
    private ParentEditResponse() { }
    private static readonly ParentEditResponse defaultInstance = new ParentEditResponse().MakeReadOnly();
    private static readonly string[] _ParentEditResponseFieldNames = new string[] { "auth_token" };
    private static readonly uint[] _ParentEditResponseFieldTags = new uint[] { 10 };
    public static ParentEditResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentEditResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentEditResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentEditResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentEditResponse, ParentEditResponse.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentEditResponse__FieldAccessorTable; }
    }
    
    public const int AuthTokenFieldNumber = 1;
    private bool hasAuthToken;
    private string authToken_ = "";
    public bool HasAuthToken {
      get { return hasAuthToken; }
    }
    public string AuthToken {
      get { return authToken_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentEditResponseFieldNames;
      if (hasAuthToken) {
        output.WriteString(1, field_names[0], AuthToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthToken) {
          size += pb::CodedOutputStream.ComputeStringSize(1, AuthToken);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentEditResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentEditResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentEditResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentEditResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentEditResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentEditResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentEditResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentEditResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentEditResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentEditResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentEditResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentEditResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentEditResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentEditResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentEditResponse result;
      
      private ParentEditResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentEditResponse original = result;
          result = new ParentEditResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentEditResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentEditResponse.Descriptor; }
      }
      
      public override ParentEditResponse DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentEditResponse.DefaultInstance; }
      }
      
      public override ParentEditResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentEditResponse) {
          return MergeFrom((ParentEditResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentEditResponse other) {
        if (other == global::Senseix.Message.Parent.ParentEditResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthToken) {
          AuthToken = other.AuthToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentEditResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentEditResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAuthToken = input.ReadString(ref result.authToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthToken {
        get { return result.hasAuthToken; }
      }
      public string AuthToken {
        get { return result.AuthToken; }
        set { SetAuthToken(value); }
      }
      public Builder SetAuthToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthToken = true;
        result.authToken_ = value;
        return this;
      }
      public Builder ClearAuthToken() {
        PrepareBuilder();
        result.hasAuthToken = false;
        result.authToken_ = "";
        return this;
      }
    }
    static ParentEditResponse() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentMergeResponse : pb::GeneratedMessage<ParentMergeResponse, ParentMergeResponse.Builder> {
    private ParentMergeResponse() { }
    private static readonly ParentMergeResponse defaultInstance = new ParentMergeResponse().MakeReadOnly();
    private static readonly string[] _ParentMergeResponseFieldNames = new string[] { "auth_token" };
    private static readonly uint[] _ParentMergeResponseFieldTags = new uint[] { 10 };
    public static ParentMergeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentMergeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentMergeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentMergeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentMergeResponse, ParentMergeResponse.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentMergeResponse__FieldAccessorTable; }
    }
    
    public const int AuthTokenFieldNumber = 1;
    private bool hasAuthToken;
    private string authToken_ = "";
    public bool HasAuthToken {
      get { return hasAuthToken; }
    }
    public string AuthToken {
      get { return authToken_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAuthToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentMergeResponseFieldNames;
      if (hasAuthToken) {
        output.WriteString(1, field_names[0], AuthToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthToken) {
          size += pb::CodedOutputStream.ComputeStringSize(1, AuthToken);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentMergeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentMergeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentMergeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentMergeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentMergeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentMergeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentMergeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentMergeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentMergeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentMergeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentMergeResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentMergeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentMergeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentMergeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentMergeResponse result;
      
      private ParentMergeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentMergeResponse original = result;
          result = new ParentMergeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentMergeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentMergeResponse.Descriptor; }
      }
      
      public override ParentMergeResponse DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentMergeResponse.DefaultInstance; }
      }
      
      public override ParentMergeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentMergeResponse) {
          return MergeFrom((ParentMergeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentMergeResponse other) {
        if (other == global::Senseix.Message.Parent.ParentMergeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthToken) {
          AuthToken = other.AuthToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentMergeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentMergeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAuthToken = input.ReadString(ref result.authToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthToken {
        get { return result.hasAuthToken; }
      }
      public string AuthToken {
        get { return result.AuthToken; }
        set { SetAuthToken(value); }
      }
      public Builder SetAuthToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthToken = true;
        result.authToken_ = value;
        return this;
      }
      public Builder ClearAuthToken() {
        PrepareBuilder();
        result.hasAuthToken = false;
        result.authToken_ = "";
        return this;
      }
    }
    static ParentMergeResponse() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParentMergeRequest : pb::GeneratedMessage<ParentMergeRequest, ParentMergeRequest.Builder> {
    private ParentMergeRequest() { }
    private static readonly ParentMergeRequest defaultInstance = new ParentMergeRequest().MakeReadOnly();
    private static readonly string[] _ParentMergeRequestFieldNames = new string[] { "decision", "device_id", "email", "new_Player_name", "password", "Player_id" };
    private static readonly uint[] _ParentMergeRequestFieldTags = new uint[] { 32, 26, 18, 50, 10, 42 };
    public static ParentMergeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParentMergeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParentMergeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentMergeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParentMergeRequest, ParentMergeRequest.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_ParentMergeRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Decision {
        MERGE = 0,
        CREATE = 1,
        DELETE = 2,
      }
      
    }
    #endregion
    
    public const int PasswordFieldNumber = 1;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int EmailFieldNumber = 2;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int DeviceIdFieldNumber = 3;
    private bool hasDeviceId;
    private string deviceId_ = "";
    public bool HasDeviceId {
      get { return hasDeviceId; }
    }
    public string DeviceId {
      get { return deviceId_; }
    }
    
    public const int DecisionFieldNumber = 4;
    private bool hasDecision;
    private global::Senseix.Message.Parent.ParentMergeRequest.Types.Decision decision_ = global::Senseix.Message.Parent.ParentMergeRequest.Types.Decision.DELETE;
    public bool HasDecision {
      get { return hasDecision; }
    }
    public global::Senseix.Message.Parent.ParentMergeRequest.Types.Decision Decision {
      get { return decision_; }
    }
    
    public const int PlayerIdFieldNumber = 5;
    private bool hasPlayerId;
    private string PlayerId_ = "";
    public bool HasPlayerId {
      get { return hasPlayerId; }
    }
    public string PlayerId {
      get { return PlayerId_; }
    }
    
    public const int NewPlayerNameFieldNumber = 6;
    private bool hasNewPlayerName;
    private string newPlayerName_ = "";
    public bool HasNewPlayerName {
      get { return hasNewPlayerName; }
    }
    public string NewPlayerName {
      get { return newPlayerName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPassword) return false;
        if (!hasEmail) return false;
        if (!hasDeviceId) return false;
        if (!hasDecision) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ParentMergeRequestFieldNames;
      if (hasPassword) {
        output.WriteString(1, field_names[4], Password);
      }
      if (hasEmail) {
        output.WriteString(2, field_names[2], Email);
      }
      if (hasDeviceId) {
        output.WriteString(3, field_names[1], DeviceId);
      }
      if (hasDecision) {
        output.WriteEnum(4, field_names[0], (int) Decision, Decision);
      }
      if (hasPlayerId) {
        output.WriteString(5, field_names[5], PlayerId);
      }
      if (hasNewPlayerName) {
        output.WriteString(6, field_names[3], NewPlayerName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Password);
        }
        if (hasEmail) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Email);
        }
        if (hasDeviceId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, DeviceId);
        }
        if (hasDecision) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Decision);
        }
        if (hasPlayerId) {
          size += pb::CodedOutputStream.ComputeStringSize(5, PlayerId);
        }
        if (hasNewPlayerName) {
          size += pb::CodedOutputStream.ComputeStringSize(6, NewPlayerName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParentMergeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentMergeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentMergeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParentMergeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParentMergeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentMergeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParentMergeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParentMergeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParentMergeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParentMergeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParentMergeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParentMergeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParentMergeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParentMergeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParentMergeRequest result;
      
      private ParentMergeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ParentMergeRequest original = result;
          result = new ParentMergeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParentMergeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.ParentMergeRequest.Descriptor; }
      }
      
      public override ParentMergeRequest DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.ParentMergeRequest.DefaultInstance; }
      }
      
      public override ParentMergeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParentMergeRequest) {
          return MergeFrom((ParentMergeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParentMergeRequest other) {
        if (other == global::Senseix.Message.Parent.ParentMergeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasDeviceId) {
          DeviceId = other.DeviceId;
        }
        if (other.HasDecision) {
          Decision = other.Decision;
        }
        if (other.HasPlayerId) {
          PlayerId = other.PlayerId;
        }
        if (other.HasNewPlayerName) {
          NewPlayerName = other.NewPlayerName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ParentMergeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ParentMergeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 18: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
            case 26: {
              result.hasDeviceId = input.ReadString(ref result.deviceId_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.decision_, out unknown)) {
                result.hasDecision = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 42: {
              result.hasPlayerId = input.ReadString(ref result.PlayerId_);
              break;
            }
            case 50: {
              result.hasNewPlayerName = input.ReadString(ref result.newPlayerName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasDeviceId {
        get { return result.hasDeviceId; }
      }
      public string DeviceId {
        get { return result.DeviceId; }
        set { SetDeviceId(value); }
      }
      public Builder SetDeviceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder ClearDeviceId() {
        PrepareBuilder();
        result.hasDeviceId = false;
        result.deviceId_ = "";
        return this;
      }
      
      public bool HasDecision {
       get { return result.hasDecision; }
      }
      public global::Senseix.Message.Parent.ParentMergeRequest.Types.Decision Decision {
        get { return result.Decision; }
        set { SetDecision(value); }
      }
      public Builder SetDecision(global::Senseix.Message.Parent.ParentMergeRequest.Types.Decision value) {
        PrepareBuilder();
        result.hasDecision = true;
        result.decision_ = value;
        return this;
      }
      public Builder ClearDecision() {
        PrepareBuilder();
        result.hasDecision = false;
        result.decision_ = global::Senseix.Message.Parent.ParentMergeRequest.Types.Decision.DELETE;
        return this;
      }
      
      public bool HasPlayerId {
        get { return result.hasPlayerId; }
      }
      public string PlayerId {
        get { return result.PlayerId; }
        set { SetPlayerId(value); }
      }
      public Builder SetPlayerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlayerId = true;
        result.PlayerId_ = value;
        return this;
      }
      public Builder ClearPlayerId() {
        PrepareBuilder();
        result.hasPlayerId = false;
        result.PlayerId_ = "";
        return this;
      }
      
      public bool HasNewPlayerName {
        get { return result.hasNewPlayerName; }
      }
      public string NewPlayerName {
        get { return result.NewPlayerName; }
        set { SetNewPlayerName(value); }
      }
      public Builder SetNewPlayerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewPlayerName = true;
        result.newPlayerName_ = value;
        return this;
      }
      public Builder ClearNewPlayerName() {
        PrepareBuilder();
        result.hasNewPlayerName = false;
        result.newPlayerName_ = "";
        return this;
      }
    }
    static ParentMergeRequest() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameVerificationRequest : pb::GeneratedMessage<GameVerificationRequest, GameVerificationRequest.Builder> {
    private GameVerificationRequest() { }
    private static readonly GameVerificationRequest defaultInstance = new GameVerificationRequest().MakeReadOnly();
    private static readonly string[] _gameVerificationRequestFieldNames = new string[] { "udid", "verification_token" };
    private static readonly uint[] _gameVerificationRequestFieldTags = new uint[] { 10, 18 };
    public static GameVerificationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameVerificationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameVerificationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_GameVerificationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameVerificationRequest, GameVerificationRequest.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_GameVerificationRequest__FieldAccessorTable; }
    }
    
    public const int UdidFieldNumber = 1;
    private bool hasUdid;
    private string udid_ = "";
    public bool HasUdid {
      get { return hasUdid; }
    }
    public string Udid {
      get { return udid_; }
    }
    
    public const int VerificationTokenFieldNumber = 2;
    private bool hasVerificationToken;
    private string verificationToken_ = "";
    public bool HasVerificationToken {
      get { return hasVerificationToken; }
    }
    public string VerificationToken {
      get { return verificationToken_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUdid) return false;
        if (!hasVerificationToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameVerificationRequestFieldNames;
      if (hasUdid) {
        output.WriteString(1, field_names[0], Udid);
      }
      if (hasVerificationToken) {
        output.WriteString(2, field_names[1], VerificationToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUdid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Udid);
        }
        if (hasVerificationToken) {
          size += pb::CodedOutputStream.ComputeStringSize(2, VerificationToken);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameVerificationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameVerificationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameVerificationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameVerificationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameVerificationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameVerificationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameVerificationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameVerificationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameVerificationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameVerificationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameVerificationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameVerificationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameVerificationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameVerificationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameVerificationRequest result;
      
      private GameVerificationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GameVerificationRequest original = result;
          result = new GameVerificationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameVerificationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.GameVerificationRequest.Descriptor; }
      }
      
      public override GameVerificationRequest DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.GameVerificationRequest.DefaultInstance; }
      }
      
      public override GameVerificationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameVerificationRequest) {
          return MergeFrom((GameVerificationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameVerificationRequest other) {
        if (other == global::Senseix.Message.Parent.GameVerificationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUdid) {
          Udid = other.Udid;
        }
        if (other.HasVerificationToken) {
          VerificationToken = other.VerificationToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameVerificationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameVerificationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUdid = input.ReadString(ref result.udid_);
              break;
            }
            case 18: {
              result.hasVerificationToken = input.ReadString(ref result.verificationToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUdid {
        get { return result.hasUdid; }
      }
      public string Udid {
        get { return result.Udid; }
        set { SetUdid(value); }
      }
      public Builder SetUdid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUdid = true;
        result.udid_ = value;
        return this;
      }
      public Builder ClearUdid() {
        PrepareBuilder();
        result.hasUdid = false;
        result.udid_ = "";
        return this;
      }
      
      public bool HasVerificationToken {
        get { return result.hasVerificationToken; }
      }
      public string VerificationToken {
        get { return result.VerificationToken; }
        set { SetVerificationToken(value); }
      }
      public Builder SetVerificationToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVerificationToken = true;
        result.verificationToken_ = value;
        return this;
      }
      public Builder ClearVerificationToken() {
        PrepareBuilder();
        result.hasVerificationToken = false;
        result.verificationToken_ = "";
        return this;
      }
    }
    static GameVerificationRequest() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameVerificationResponse : pb::GeneratedMessage<GameVerificationResponse, GameVerificationResponse.Builder> {
    private GameVerificationResponse() { }
    private static readonly GameVerificationResponse defaultInstance = new GameVerificationResponse().MakeReadOnly();
    private static readonly string[] _gameVerificationResponseFieldNames = new string[] {  };
    private static readonly uint[] _gameVerificationResponseFieldTags = new uint[] {  };
    public static GameVerificationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameVerificationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameVerificationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_GameVerificationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameVerificationResponse, GameVerificationResponse.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Parent.Parent.internal__static_Senseix_Message_Parent_GameVerificationResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameVerificationResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameVerificationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameVerificationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameVerificationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameVerificationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameVerificationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameVerificationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameVerificationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameVerificationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameVerificationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameVerificationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameVerificationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameVerificationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameVerificationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameVerificationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameVerificationResponse result;
      
      private GameVerificationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GameVerificationResponse original = result;
          result = new GameVerificationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameVerificationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Parent.GameVerificationResponse.Descriptor; }
      }
      
      public override GameVerificationResponse DefaultInstanceForType {
        get { return global::Senseix.Message.Parent.GameVerificationResponse.DefaultInstance; }
      }
      
      public override GameVerificationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameVerificationResponse) {
          return MergeFrom((GameVerificationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameVerificationResponse other) {
        if (other == global::Senseix.Message.Parent.GameVerificationResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameVerificationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameVerificationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GameVerificationResponse() {
      object.ReferenceEquals(global::Senseix.Message.Parent.Parent.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
