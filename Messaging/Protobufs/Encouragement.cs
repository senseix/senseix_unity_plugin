// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Senseix.Message.Encouragement {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Encouragement {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Encouragement_EncouragementData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Encouragement.EncouragementData, global::Senseix.Message.Encouragement.EncouragementData.Builder> internal__static_Senseix_Message_Encouragement_EncouragementData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Senseix_Message_Encouragement_EncouragementCreateResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Encouragement.EncouragementCreateResponse, global::Senseix.Message.Encouragement.EncouragementCreateResponse.Builder> internal__static_Senseix_Message_Encouragement_EncouragementCreateResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Encouragement() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChNFbmNvdXJhZ2VtZW50LnByb3RvEh1TZW5zZWl4Lk1lc3NhZ2UuRW5jb3Vy" + 
          "YWdlbWVudCJCChFFbmNvdXJhZ2VtZW50RGF0YRIMCgR0eXBlGAEgAigNEhEK" + 
          "CXBsYXllcl9pZBgCIAIoCRIMCgRkYXRhGAMgASgJIh0KG0VuY291cmFnZW1l" + 
          "bnRDcmVhdGVSZXNwb25zZQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Senseix_Message_Encouragement_EncouragementData__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Senseix_Message_Encouragement_EncouragementData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Encouragement.EncouragementData, global::Senseix.Message.Encouragement.EncouragementData.Builder>(internal__static_Senseix_Message_Encouragement_EncouragementData__Descriptor,
                new string[] { "Type", "PlayerId", "Data", });
        internal__static_Senseix_Message_Encouragement_EncouragementCreateResponse__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Senseix_Message_Encouragement_EncouragementCreateResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Senseix.Message.Encouragement.EncouragementCreateResponse, global::Senseix.Message.Encouragement.EncouragementCreateResponse.Builder>(internal__static_Senseix_Message_Encouragement_EncouragementCreateResponse__Descriptor,
                new string[] { });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EncouragementData : pb::GeneratedMessage<EncouragementData, EncouragementData.Builder> {
    private EncouragementData() { }
    private static readonly EncouragementData defaultInstance = new EncouragementData().MakeReadOnly();
    private static readonly string[] _encouragementDataFieldNames = new string[] { "data", "player_id", "type" };
    private static readonly uint[] _encouragementDataFieldTags = new uint[] { 26, 18, 8 };
    public static EncouragementData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EncouragementData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EncouragementData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Encouragement.Encouragement.internal__static_Senseix_Message_Encouragement_EncouragementData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EncouragementData, EncouragementData.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Encouragement.Encouragement.internal__static_Senseix_Message_Encouragement_EncouragementData__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private uint type_;
    public bool HasType {
      get { return hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return type_; }
    }
    
    public const int PlayerIdFieldNumber = 2;
    private bool hasPlayerId;
    private string playerId_ = "";
    public bool HasPlayerId {
      get { return hasPlayerId; }
    }
    public string PlayerId {
      get { return playerId_; }
    }
    
    public const int DataFieldNumber = 3;
    private bool hasData;
    private string data_ = "";
    public bool HasData {
      get { return hasData; }
    }
    public string Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasPlayerId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _encouragementDataFieldNames;
      if (hasType) {
        output.WriteUInt32(1, field_names[2], Type);
      }
      if (hasPlayerId) {
        output.WriteString(2, field_names[1], PlayerId);
      }
      if (hasData) {
        output.WriteString(3, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
        }
        if (hasPlayerId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, PlayerId);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EncouragementData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EncouragementData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EncouragementData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EncouragementData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EncouragementData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EncouragementData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EncouragementData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EncouragementData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EncouragementData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EncouragementData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EncouragementData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EncouragementData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EncouragementData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EncouragementData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EncouragementData result;
      
      private EncouragementData PrepareBuilder() {
        if (resultIsReadOnly) {
          EncouragementData original = result;
          result = new EncouragementData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EncouragementData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Encouragement.EncouragementData.Descriptor; }
      }
      
      public override EncouragementData DefaultInstanceForType {
        get { return global::Senseix.Message.Encouragement.EncouragementData.DefaultInstance; }
      }
      
      public override EncouragementData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EncouragementData) {
          return MergeFrom((EncouragementData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EncouragementData other) {
        if (other == global::Senseix.Message.Encouragement.EncouragementData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasPlayerId) {
          PlayerId = other.PlayerId;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_encouragementDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _encouragementDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasType = input.ReadUInt32(ref result.type_);
              break;
            }
            case 18: {
              result.hasPlayerId = input.ReadString(ref result.playerId_);
              break;
            }
            case 26: {
              result.hasData = input.ReadString(ref result.data_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      [global::System.CLSCompliant(false)]
      public uint Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetType(uint value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasPlayerId {
        get { return result.hasPlayerId; }
      }
      public string PlayerId {
        get { return result.PlayerId; }
        set { SetPlayerId(value); }
      }
      public Builder SetPlayerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlayerId = true;
        result.playerId_ = value;
        return this;
      }
      public Builder ClearPlayerId() {
        PrepareBuilder();
        result.hasPlayerId = false;
        result.playerId_ = "";
        return this;
      }
      
      public bool HasData {
        get { return result.hasData; }
      }
      public string Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = "";
        return this;
      }
    }
    static EncouragementData() {
      object.ReferenceEquals(global::Senseix.Message.Encouragement.Encouragement.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EncouragementCreateResponse : pb::GeneratedMessage<EncouragementCreateResponse, EncouragementCreateResponse.Builder> {
    private EncouragementCreateResponse() { }
    private static readonly EncouragementCreateResponse defaultInstance = new EncouragementCreateResponse().MakeReadOnly();
    private static readonly string[] _encouragementCreateResponseFieldNames = new string[] {  };
    private static readonly uint[] _encouragementCreateResponseFieldTags = new uint[] {  };
    public static EncouragementCreateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EncouragementCreateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EncouragementCreateResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Senseix.Message.Encouragement.Encouragement.internal__static_Senseix_Message_Encouragement_EncouragementCreateResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EncouragementCreateResponse, EncouragementCreateResponse.Builder> InternalFieldAccessors {
      get { return global::Senseix.Message.Encouragement.Encouragement.internal__static_Senseix_Message_Encouragement_EncouragementCreateResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _encouragementCreateResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EncouragementCreateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EncouragementCreateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EncouragementCreateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EncouragementCreateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EncouragementCreateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EncouragementCreateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EncouragementCreateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EncouragementCreateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EncouragementCreateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EncouragementCreateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EncouragementCreateResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EncouragementCreateResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EncouragementCreateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EncouragementCreateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EncouragementCreateResponse result;
      
      private EncouragementCreateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          EncouragementCreateResponse original = result;
          result = new EncouragementCreateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EncouragementCreateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Senseix.Message.Encouragement.EncouragementCreateResponse.Descriptor; }
      }
      
      public override EncouragementCreateResponse DefaultInstanceForType {
        get { return global::Senseix.Message.Encouragement.EncouragementCreateResponse.DefaultInstance; }
      }
      
      public override EncouragementCreateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EncouragementCreateResponse) {
          return MergeFrom((EncouragementCreateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EncouragementCreateResponse other) {
        if (other == global::Senseix.Message.Encouragement.EncouragementCreateResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_encouragementCreateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _encouragementCreateResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static EncouragementCreateResponse() {
      object.ReferenceEquals(global::Senseix.Message.Encouragement.Encouragement.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
